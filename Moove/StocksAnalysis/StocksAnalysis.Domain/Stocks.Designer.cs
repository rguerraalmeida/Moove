//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace StocksAnalysis.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StocksContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StocksContext object using the connection string found in the 'StocksContext' section of the application configuration file.
        /// </summary>
        public StocksContext() : base("name=StocksContext", "StocksContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StocksContext object.
        /// </summary>
        public StocksContext(string connectionString) : base(connectionString, "StocksContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StocksContext object.
        /// </summary>
        public StocksContext(EntityConnection connection) : base(connection, "StocksContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SymbolLookup> SymbolLookups
        {
            get
            {
                if ((_SymbolLookups == null))
                {
                    _SymbolLookups = base.CreateObjectSet<SymbolLookup>("SymbolLookups");
                }
                return _SymbolLookups;
            }
        }
        private ObjectSet<SymbolLookup> _SymbolLookups;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SymbolLookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymbolLookups(SymbolLookup symbolLookup)
        {
            base.AddObject("SymbolLookups", symbolLookup);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StocksDbModel", Name="SymbolLookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SymbolLookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SymbolLookup object.
        /// </summary>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static SymbolLookup CreateSymbolLookup(global::System.String symbol)
        {
            SymbolLookup symbolLookup = new SymbolLookup();
            symbolLookup.Symbol = symbol;
            return symbolLookup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                if (_Symbol != value)
                {
                    OnSymbolChanging(value);
                    ReportPropertyChanging("Symbol");
                    _Symbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Symbol");
                    OnSymbolChanged();
                }
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String shortname
        {
            get
            {
                return _shortname;
            }
            set
            {
                OnshortnameChanging(value);
                ReportPropertyChanging("shortname");
                _shortname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("shortname");
                OnshortnameChanged();
            }
        }
        private global::System.String _shortname;
        partial void OnshortnameChanging(global::System.String value);
        partial void OnshortnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String exch
        {
            get
            {
                return _exch;
            }
            set
            {
                OnexchChanging(value);
                ReportPropertyChanging("exch");
                _exch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("exch");
                OnexchChanged();
            }
        }
        private global::System.String _exch;
        partial void OnexchChanging(global::System.String value);
        partial void OnexchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String exchDisp
        {
            get
            {
                return _exchDisp;
            }
            set
            {
                OnexchDispChanging(value);
                ReportPropertyChanging("exchDisp");
                _exchDisp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("exchDisp");
                OnexchDispChanged();
            }
        }
        private global::System.String _exchDisp;
        partial void OnexchDispChanging(global::System.String value);
        partial void OnexchDispChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String typeDisp
        {
            get
            {
                return _typeDisp;
            }
            set
            {
                OntypeDispChanging(value);
                ReportPropertyChanging("typeDisp");
                _typeDisp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("typeDisp");
                OntypeDispChanged();
            }
        }
        private global::System.String _typeDisp;
        partial void OntypeDispChanging(global::System.String value);
        partial void OntypeDispChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();

        #endregion
    
    }

    #endregion
    
}
